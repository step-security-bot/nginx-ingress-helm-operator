apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "charts.nginx.org/v1alpha1",
          "kind": "NginxIngress",
          "metadata": {
            "name": "nginxingress-sample"
          },
          "spec": {
            "controller": {
              "kind": "deployment",
              "annotations": {},
              "nginxplus": false,
              "nginxReloadTimeout": 60000,
              "appprotect": {
                "enable": false
              },
              "appprotectdos": {
                "enable": false,
                "debug": false,
                "maxWorkers": 0,
                "maxDaemons": 0,
                "memory": 0
              },
              "hostNetwork": false,
              "dnsPolicy": "ClusterFirst",
              "nginxDebug": false,
              "logLevel": 1,
              "customPorts": [],
              "image": {
                "repository": "nginx/nginx-ingress",
                "tag": "3.1.0-ubi",
                "pullPolicy": "IfNotPresent"
              },
              "lifecycle": {},
              "customConfigMap": "",
              "config": {
                "annotations": {},
                "entries": {}
              },
              "defaultTLS": {
                "secret": ""
              },
              "wildcardTLS": {
                "secret": null
              },
              "terminationGracePeriodSeconds": 30,
              "autoscaling": {
                "enabled": false,
                "annotations": {},
                "minReplicas": 1,
                "maxReplicas": 3,
                "targetCPUUtilizationPercentage": 50,
                "targetMemoryUtilizationPercentage": 50
              },
              "resources": {
                "requests": {
                  "cpu": "100m",
                  "memory": "128Mi"
                }
              },
              "tolerations": [],
              "affinity": {},
              "env": [],
              "volumes": [],
              "volumeMounts": [],
              "initContainers": [],
              "minReadySeconds": 0,
              "podDisruptionBudget": {
                "enabled": false,
                "annotations": {}
              },
              "strategy": {},
              "extraContainers": [],
              "replicaCount": 1,
              "ingressClass": "nginx",
              "setAsDefaultIngress": false,
              "watchNamespace": "",
              "watchNamespaceLabel": "",
              "watchSecretNamespace": "",
              "enableCustomResources": true,
              "enablePreviewPolicies": false,
              "enableOIDC": false,
              "includeYear": false,
              "enableTLSPassthrough": false,
              "enableCertManager": false,
              "enableExternalDNS": false,
              "globalConfiguration": {
                "create": false,
                "spec": {}
              },
              "enableSnippets": false,
              "healthStatus": false,
              "healthStatusURI": "/nginx-health",
              "nginxStatus": {
                "enable": true,
                "port": 8080,
                "allowCidrs": "127.0.0.1"
              },
              "service": {
                "create": true,
                "type": "LoadBalancer",
                "externalTrafficPolicy": "Local",
                "annotations": {},
                "extraLabels": {},
                "loadBalancerIP": "",
                "externalIPs": [],
                "loadBalancerSourceRanges": [],
                "httpPort": {
                  "enable": true,
                  "port": 80,
                  "targetPort": 80
                },
                "httpsPort": {
                  "enable": true,
                  "port": 443,
                  "targetPort": 443
                },
                "customPorts": []
              },
              "serviceAccount": {
                "annotations": {},
                "imagePullSecretName": ""
              },
              "serviceMonitor": {
                "create": false,
                "labels": {},
                "selectorMatchLabels": {},
                "endpoints": []
              },
              "reportIngressStatus": {
                "enable": true,
                "ingressLink": "",
                "enableLeaderElection": true,
                "annotations": {}
              },
              "pod": {
                "annotations": {},
                "extraLabels": {}
              },
              "readyStatus": {
                "enable": true,
                "port": 8081,
                "initialDelaySeconds": 0
              },
              "enableLatencyMetrics": false,
              "disableIPV6": false
            },
            "readOnlyRootFilesystem": false,
            "rbac": {
              "create": true
            },
            "prometheus": {
              "create": true,
              "port": 9113,
              "secret": "",
              "scheme": "http"
            },
            "serviceInsight": {
              "create": false,
              "port": 9114,
              "secret": "",
              "scheme": "http"
            },
            "nginxServiceMesh": {
              "enable": false,
              "enableEgress": false
            }
          }
        }
      ]
    capabilities: Basic Install
    categories: Monitoring, Networking
    certified: "true"
    containerImage: nginx/nginx-ingress-operator:1.4.1
    createdAt: placeholder
    description: The NGINX Ingress Operator is a Kubernetes/OpenShift component which
      deploys and manages one or more NGINX/NGINX Plus Ingress Controllers
    operatorframework.io/suggested-namespace: nginx-ingress
    repository: https://github.com/nginxinc/nginx-ingress-helm-operator
    support: NGINX Inc.
  labels:
    operatorframework.io/arch.amd64: supported
    operatorframework.io/arch.arm64: supported
    operatorframework.io/arch.ppc64le: supported
    operatorframework.io/arch.s390x: supported
  name: nginx-ingress-operator.v0.0.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: The `NginxIngress` Custom Resource is the definition of a deployment
        of the Ingress Controller.
      displayName: Nginx Ingress Controller
      kind: NginxIngress
      name: nginxingresses.charts.nginx.org
      version: v1alpha1
  description: The NGINX Ingress Operator is a Kubernetes/OpenShift component which
    deploys and manages one or more NGINX/NGINX Plus Ingress Controllers
  displayName: Nginx Ingress Operator
  icon:
  - base64data: PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA2My4zNiA3My40NCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiMwMDk2Mzk7fS5jbHMtMntmaWxsOiNmZmY7fS5jbHMtM3tmaWxsOiM5OTk7fTwvc3R5bGU+PC9kZWZzPjx0aXRsZT5OR0lOWC1oZXgtc291cmNlLVJHQi0wMjwvdGl0bGU+PHBhdGggY2xhc3M9ImNscy0xIiBkPSJNLjUwMjcyLDU0LjcyMWEzLjYzNywzLjYzNywwLDAsMCwxLjM2NjQxLDEuMzU1OTNMMjkuODIxOTIsNzIuMjE1NDlsLjAwMDg3LS4wMDA4N2EzLjY2NzkzLDMuNjY3OTMsMCwwLDAsMy43MTUyOSwwTDYxLjQ5MTc1LDU2LjA3NjA2YTMuNjY1NjgsMy42NjU2OCwwLDAsMCwxLjg1Njc3LTMuMjE2MTlWMjAuNTgyNzVsLS4wMDA4Ny0uMDAwODdBMy42NjY4NSwzLjY2Njg1LDAsMCwwLDYxLjQ5LDE3LjM2NDgxTDMzLjUzNjM0LDEuMjI2MjVWMS4yMjUzOGEzLjY2MzEzLDMuNjYzMTMsMCwwLDAtMy43MTI2OCwwdi4wMDA4N0wxLjg3MDg3LDE3LjM2NDgxQTMuNjY1MywzLjY2NTMsMCwwLDAsLjAxMjM1LDIwLjU4MTg4bC0uMDAwODcuMDAwODdWNTIuODU5ODdBMy42NDQyNiwzLjY0NDI2LDAsMCwwLC41MDE4NSw1NC43MjEiLz48cGF0aCBjbGFzcz0iY2xzLTIiIGQ9Ik0yMi43MzAxNSw0OS4wMDhhMy41OTQ4OCwzLjU5NDg4LDAsMCwxLTcuMTg5NzYsMGwuMDAwODguMDAwODguMDAzNDktMjQuNjc3MjdjMC0xLjkxMTc0LDEuNjg5MjQtMy40OTI3OSw0LjA4MTc1LTMuNDkyNzlhNi4zOTI4Miw2LjM5MjgyLDAsMCwxLDQuOTAwMjEsMi4xOTFMMjUuNjEzLDI0LjMyOTg5LDQwLjYzMTI0LDQyLjMwMjUzVjI0LjQzMkg0MC42Mjk1YTMuNTk0ODgsMy41OTQ4OCwwLDAsMSw3LjE4OTc1LDBoLS4wMDA4N2wtLjAwMzQ5LDI0LjY3NTUyYzAsMS45MTE3NS0xLjY5MDExLDMuNDkyNzktNC4wODE3NSwzLjQ5Mjc5YTYuMzg4NTcsNi4zODg1NywwLDAsMS00LjkwMDIxLTIuMTkxTDIyLjcyODQsMzEuMTM2NTlWNDkuMDA4OVoiLz48cGF0aCBjbGFzcz0iY2xzLTMiIGQ9Ik01OS45NzQ3OCw2Ni4wMzQxaC40NTkzNFY2NS4wMTFoLjM2MzM1YTEuMDM2NzQsMS4wMzY3NCwwLDAsMSwuNTEwMzcuMDg1MjIuNjM5MTcuNjM5MTcsMCwwLDEsLjI0MjU1LjU5NTEzdi4yMDk3NmwuMDEwMjkuMDc4MmEuMTU3ODEuMTU3ODEsMCwwLDEsLjAwNy4wMzI3OGMuMDAyMzQuMDEyNjQuMDAzMjguMDE2MzguMDEwMy4wMjJoLjQyNTYzbC0uMDE1NDYtLjAyOWEuMjk4NjMuMjk4NjMsMCwwLDEtLjAyMDYtLjEzM2MtLjAwNjA5LS4wNzM1MS0uMDA2MDktLjEzNjI1LS4wMDYwOS0uMTk0MzF2LS4xOTM4NWEuNzQxOTQuNzQxOTQsMCwwLDAtLjE0MjM0LS40MDU0OS42NjEyOS42NjEyOSwwLDAsMC0uNDUzMjUtLjI1NDcyLDEuMTE4ODQsMS4xMTg4NCwwLDAsMCwuMzc3ODctLjEyMjY4LjU2NjczLjU2NjczLDAsMCwwLC4yNTM3OC0uNTE1MDUuNjQwMDguNjQwMDgsMCwwLDAtLjQwMTc0LS42NjA2OCwxLjk5OTA2LDEuOTk5MDYsMCwwLDAtLjcxMjE5LS4wOTMxOGgtLjkwODg0Wm0xLjMwNjM3LTEuNDAyODJhMS4xODgyLDEuMTg4MiwwLDAsMS0uNDM2ODYuMDU4MDZoLS40MTAxN1Y2My43NDIxaC4zOTE0NGExLjE1NTUsMS4xNTU1LDAsMCwxLC41NTIuMTAxNjEuMzk0MTMuMzk0MTMsMCwwLDEsLjE3Mjc4LjM3OTc0LjQwMDg3LjQwMDg3LDAsMCwxLS4yNjkyNC40MDc4M20xLjMzNC0xLjU2MzlhMi4zMDc5MiwyLjMwNzkyLDAsMCwwLTEuNjg3LS42ODk3MSwyLjM3MywyLjM3MywwLDAsMCwwLDQuNzQ2LDIuMzc3MjQsMi4zNzcyNCwwLDAsMCwxLjY4Ny00LjA1NjNtLS4yNDExNC4yMzU1MmExLjk0MzU5LDEuOTQzNTksMCwwLDEsLjU5NTU5LDEuNDQzNTYsMi4wMzkyMiwyLjAzOTIyLDAsMCwxLTMuNDg1NTIsMS40NTA1OSwyLjAxMzExLDIuMDEzMTEsMCwwLDEtLjU5Mjc5LTEuNDUwNTlBMi4wNDYyNywyLjA0NjI3LDAsMCwxLDYwLjkyODEsNjIuNjk3YTEuOTQ2LDEuOTQ2LDAsMCwxLDEuNDQ1OTEuNjA1ODkiLz48L3N2Zz4=
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          - endpoints
          - events
          - namespaces
          - persistentvolumeclaims
          - pods
          - secrets
          - serviceaccounts
          - services
          - services/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - appprotect.f5.com
          - appprotectdos.f5.com
          - k8s.nginx.org
          resources:
          - '*'
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - daemonsets
          - deployments
          - replicasets
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - security.openshift.io
          resourceNames:
          - nginx-admin
          resources:
          - securitycontextconstraints
          verbs:
          - create
          - delete
          - get
        - apiGroups:
          - charts.nginx.org
          resources:
          - nginxingresses
          - nginxingresses/status
          - nginxingresses/finalizers
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterroles
          verbs:
          - '*'
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingressclasses
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - configmaps
          - secrets
          - serviceaccounts
          - services
          verbs:
          - '*'
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: nginx-ingress-operator-controller-manager
      deployments:
      - name: nginx-ingress-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                - --leader-election-id=nginx-ingress-operator
                image: nginx/nginx-ingress-operator:1.4.1
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 256Mi
                  requests:
                    cpu: 250m
                    memory: 128Mi
                securityContext:
                  allowPrivilegeEscalation: false
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: registry.redhat.io/openshift4/ose-kube-rbac-proxy:v4.9
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
              securityContext:
                runAsNonRoot: true
              serviceAccountName: nginx-ingress-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: nginx-ingress-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: true
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - nginx
  - ingress-controller
  - ingress
  - controller
  - kubernetes
  - openshift
  links:
  - name: Nginx Ingress Operator
    url: https://github.com/nginxinc/nginx-ingress-helm-operator
  maintainers:
  - email: kubernetes@nginx.com
    name: NGINX Inc
  maturity: alpha
  minKubeVersion: 1.21.0
  provider:
    name: NGINX Inc
  version: 1.4.1
